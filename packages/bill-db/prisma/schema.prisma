// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Bill API Models (Database Schema) -----------------------------------------

/// Accounts (https://developer.bill.com/v2/reference/org-accounts-listchartofaccount)
model Account {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Account (begins with "0ca")
  id             String   @id
  /// Account number
  accountNumber  String?
  /// Account type (code replaced by description)
  accountType    String?
  /// CA Form 1099 form type
  ca1099FormType String?
  /// CA Form 1099 filing categorization
  ca1099Type     String?
  /// Date/time when this Account was created
  createdTime    String?
  /// Account description
  description    String?
  /// Entity object type (should be "ChartofAccount")
  entity         String?
  /// Is this account active?
  isActive       Boolean?
  /// Account name
  name           String?
  /// Date/time when this Account was last updated
  updatedTime    String?

  // Potential Relationships -------------------------------------------------

  // ID of the parent account (if any)
  parentChartOfAccountId String?

  // Actual Relationships ----------------------------------------------------

  bills                                Bill[]
  billClassifications                  BillClassifications[]
  billLineItemClassifications          BillLineItemClassifications[]
  RecurringBillLineItemClassifications RecurringBillLineItemClassifications[]
  vendorCredits                        VendorCredit[]
  VendorCreditLineItemClassifications  VendorCreditLineItemClassifications[]

  @@map("accounts")
}

/// Bills (https://developer.bill.com/reference/listbills)
model Bill {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Bill (begins with "00n")
  id            String   @id
  /// Bill total amount (local currency)
  amount        Float?
  /// Has this Bill been archived?
  archived      Boolean?
  /// Date/time when this Bill was created
  createdTime   String?
  /// Credit amount applied to this Bill
  creditAmount  Float?
  /// Description of this Bill
  description   String?
  /// Amount still due (after subtracting credits, scheduled payments, and cleared payments)
  dueAmount     Float?
  /// Due date for the bill payment (yyyy-MM-dd)
  dueDate       String?
  /// Exchange rate for this Bill (may differ at settlement time)
  exchangeRate  Float?
  /// Bill total amount (USD)
  fundingAmount Float?
  /// Date of this invoice (yyyy-MM-dd)
  invoiceDate   String?
  /// User-generated invoice number
  invoiceNumber String?
  /// Amount that has been paid minus any credits
  paidAmount    Float?
  /// Date/time when this Bill was last updated
  updatedTime   String?
  /// Name of the bill vendor
  vendorName    String?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  approvers               BillApprover[]
  classifications         BillClassifications?
  lineItems               BillLineItem[]
  /// Bill-generated ID of the chart of accounts for bill payment (begins with "0ca")
  payFromChartOfAccountId String?
  account                 Account?             @relation(fields: [payFromChartOfAccountId], references: [id], onDelete: Cascade)
  /// Bill-generated ID of the vendor (begins with "009")
  vendorId                String
  vendor                  Vendor               @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  vendorCreditUsages      VendorCreditUsage[]

  @@map("bills")
}

model BillApprover {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Bill Approver (begins with "0ba")
  id                String   @id
  /// Object type (should be "BillApprover")
  entity            String?
  /// Is this approver active?
  isActive          Boolean?
  /// Timestamp of the last approval reminder sent to this approver
  lastReminderDate  String?
  /// Zero-relative index of this approver in the list of approvers for this Vendor Credit
  sortOrder         Int?
  /// Status of this vendor credit approver (will be replaced by description)
  status            String?
  /// Timestamp of the last status change
  statusChangedDate String?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  /// ID of the Bill this approver belongs to (begins with "00n")
  billId String
  bill   Bill   @relation(fields: [billId], references: [id], onDelete: Cascade)
  /// ID of the User that is this approver (begins with "006")
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("bills_approvers")
}

/// Classifications for a Bill
model BillClassifications {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Bill (begins with "00n")
  billId String @id

  // Potential Relationships -------------------------------------------------

  /// The Bill-generated ID of the accounting class (begins with "cls")
  accountingClassId String?
  /// The Bill-generated ID of the department (begins with "0de)
  departmentId      String?
  /// The Bill-generated ID of the item (begins with "0ii")
  itemId            String?
  /// The Bill-generated ID of the location (begins with "loc")
  locationId        String?

  // Actual Relationships ----------------------------------------------------

  bill             Bill     @relation(fields: [billId], references: [id], onDelete: Cascade)
  /// The Bill-generated ID of the chart of accounts (begins with "0ca")
  chartOfAccountId String?
  account          Account? @relation(fields: [chartOfAccountId], references: [id], onDelete: Cascade)

  @@map("bills_classifications")
}

/// Line Items for a Bill
model BillLineItem {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Bill Line Item (begins with "bli")
  id          String  @id
  /// Amount for this Bill Line Item (local currency)
  amount      Float?
  /// Description of this Bill Line Item
  description String?
  /// Unit price for this line item (local currency)
  price       Float?
  /// Quantity for this line item
  quantity    Float?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  /// Primary key for the Bill this line item belongs to (begins with "00n")
  billId          String
  bill            Bill                         @relation(fields: [billId], references: [id], onDelete: Cascade)
  classifications BillLineItemClassifications?

  @@map("bills_line_items")
}

/// Classifications for a BillLineItem
model BillLineItemClassifications {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Bill Line Item (begins with "bli")
  billLineItemId String @id

  // Potential Relationships -------------------------------------------------

  /// The Bill-generated ID of the accounting class (begins with "cls")
  accountingClassId String?
  /// The Bill-generated ID of the chart of accounts (begins with "0ca")
  chartOfAccountId  String?
  /// The Bill-generated ID of the customer (begins with "0cu")
  customerId        String?
  /// The Bill-generated ID of the department (begins with "dep")
  departmentId      String?
  /// The Bill-generated ID of the employee (begins with "emp")
  employeeId        String?
  /// The Bill-generated ID of the item (begins with "0ii")
  itemId            String?
  /// The Bill-generated ID of the jog (begins with "job")
  jobId             String?
  /// The Bill-generated ID of the location (begins with "loc")
  locationId        String?

  // Actual Relationships ----------------------------------------------------

  account      Account?     @relation(fields: [chartOfAccountId], references: [id], onDelete: Cascade)
  billLineItem BillLineItem @relation(fields: [billLineItemId], references: [id], onDelete: Cascade)

  @@map("bills_line_items_classifications")
}

/// Payment Status of a Bill
enum BillPaymentStatus {
  IN_PROCESS
  PAID
  PARTIALLY_PAID
  SCHEDULED
  UNDEFINED
  UNPAID
}

// Recurring Bills (https://developer.bill.com/reference/listrecurringbills)
model RecurringBill {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Recurring Bill (begins with "0rb")
  id                       String   @id
  /// Has this Recurring Bill been archived?
  archived                 Boolean?
  /// Date/time when this Recurring Bill was created
  createdTime              String?
  /// Description of this Recurring Bill
  description              String?
  /// Processing options for this Recurring Bill from BillRecurringBillProcessingOptions
  processingOptionsAutoPay Boolean?
  /// Date/time when this Recurring Bill was last updated
  updatedTime              String?

  // Potential Relationships -------------------------------------------------

  /// Bill-generated ID of the vendor (begins with "009")
  vendorId String?

  /// Bank account ID for this Recurring Bill (begins with "bac") from BillRecurringBillPaymentInformation
  paymentInformationBankAccountId String?

  // Actual Relationships ----------------------------------------------------

  lineItems RecurringBillLineItem[]
  schedule  RecurringBillSchedule?

  @@map("recurring_bills")
}

/// Recurring Bill Line Items
model RecurringBillLineItem {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Recurring Bill Line Item (begins with "tli")
  id              String  @id
  /// Amount for this Recurring Bill Line Item (local currency)
  amount          Float?
  /// Description of this Recurring Bill Line Item
  description     String?
  /// ID of the Recurring Bill this line item belongs to (begins with "0rb")
  recurringBillId String

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  classifications RecurringBillLineItemClassifications?
  recurringBill   RecurringBill                         @relation(fields: [recurringBillId], references: [id], onDelete: Cascade)

  @@map("recurring_bills_line_items")
}

/// Classifications for a RecurringBillLineItem
model RecurringBillLineItemClassifications {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Recurring Bill Line Item (begins with "bli")
  id String @id

  // Potential Relationships -------------------------------------------------

  /// The Bill-generated ID of the accounting class (begins with "cls")
  accountingClassId String?
  /// The Bill-generated ID of the chart of accounts (begins with "0ca")
  chartOfAccountId  String?
  /// The Bill-generated ID of the department (begins with "dep")
  departmentId      String?
  /// The Bill-generated ID of the employee (begins with "emp")
  employeeId        String?
  /// The Bill-generated ID of the item (begins with "0ii")
  itemId            String?
  /// The Bill-generated ID of the jog (begins with "job")
  jobId             String?
  /// The Bill-generated ID of the location (begins with "loc")
  locationId        String?

  // Actual Relationships ----------------------------------------------------

  account  Account?              @relation(fields: [chartOfAccountId], references: [id], onDelete: Cascade)
  lineItem RecurringBillLineItem @relation(fields: [id], references: [id], onDelete: Cascade)

  @@map("recurring_bills_line_items_classifications")
}

/// Recurring Bill Schedule Information
model RecurringBillSchedule {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Recurring Bill (begins with "0rb")
  id            String                       @id
  /// Number of days in advance to create the recurring bill
  daysInAdvance Int?
  /// Date after which no more recurring bills will be created (yyyy-MM-dd)
  endDate       String?
  /// Frequency for the recurring bill (for example 3 with period MONTHLY means every 3 months)
  frequency     Int?
  /// Time period for setting up the recurring bill
  period        RecurringBillSchedulePeriod?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  recurringBill RecurringBill @relation(fields: [id], references: [id], onDelete: Cascade)

  @@map("recurring_bills_schedule")
}

// Schedule Period of a Recurring Bill
enum RecurringBillSchedulePeriod {
  DAILY
  MONTHLY
  NONE
  UNDEFINED
  WEEKLY
  YEARLY
}

/// Users (https://developer.bill.com/reference/listorganizationusers)
model User {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this User (begins with "006")
  id              String        @id
  /// Has this User been archived?
  archived        Boolean?
  /// Date/time when this User was created
  createdTime     String?
  /// Email address of this User
  email           String?
  /// First name of this User
  firstName       String?
  /// Last name of this User
  lastName        String?
  /// Description of this User role
  roleDescription String?
  /// Role ID of the Role this User belongs to
  roleId          String?
  /// Role Type of this User
  roleType        UserRoleType?
  /// Date/time when this User was last updated
  updatedTime     String?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  /// Bill approvers for this User
  billApprovers         BillApprover[]
  /// Vendor Credit approvers for this User
  vendorCreditApprovers VendorCreditApprover[]

  @@map("users")
}

/// Role of a User
enum UserRoleType {
  ACCOUNTANT
  ADMINISTRATOR
  APPROVER
  AUDITOR
  CLERK
  CUSTOM
  INTERNAL
  MEMBER
  NO_ACCESS
  PARTNER
  PAYER
  PURCHASE_REQUESTER
  REVIEWER
  UNDEFINED
}

/// Vendors (https://developer.bill.com/reference/listvendors)
model Vendor {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Vendor (begins with "009")
  id                      String               @id
  /// User account number set by the vendor
  accountNumber           String?
  /// Vendor account type
  accountType             VendorType?
  /// Has this Vendor been archived?
  archived                Boolean?
  /// Amount to be paid to the vendor
  balance_amount          Float?
  /// Last date/time the balance amount was updated
  balance_lastUpdatedDate String?
  /// Currency for this vendor (ISO 4217 code)
  billCurrency            String?
  /// Date/time when this Vendor was created
  createdTime             String?
  /// Email address of this Vendor
  email                   String?
  /// Vendor name
  name                    String?
  /// Vendor network status
  networkStatus           VendorNetworkStatus?
  /// Vendor phone number (overridden when using Bill Network vendors)
  phone                   String?
  /// Does this vendor have recurring payments enabled?
  recurringPayments       Boolean?
  /// Bill-generated ID of the verified national vendor
  rppsId                  String?
  /// Short name for this Vendor
  shortName               String?
  /// Date/time when this Vendor was last updated
  updatedTime             String?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  additionalInfo     VendorAdditionalInfo?
  address            VendorAddress?
  autoPay            VendorAutoPay?
  bills              Bill[]
  paymentInformation VendorPaymentInformation?
  vendorCredits      VendorCredit[]
  virtualCard        VendorVirtualCard? // Lifted from paymentInformation

  @@map("vendors")
}

model VendorAdditionalInfo {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Vendor
  vendorId       String           @id
  /// OK to combine a bulk payment for this Vendor?
  combinePayment Boolean?
  /// Vendor business name (required by IRS)
  companyName    String?
  /// Lead time in days for vendor payments
  leadTimeInDays Int?
  /// Bill-generated ID of the payment term for this Vendor
  paymentTermId  String?
  /// Vendor tax ID
  taxId          String?
  /// Vendor tax ID type
  taxIdType      VendorTaxIdType?
  /// Vendor eligible to receive 1099?
  track1099      Boolean?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  vendor Vendor @relation(fields: [vendorId], references: [id], onDelete: Cascade)

  @@map("vendors_additional_info")
}

model VendorAddress {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Vendor
  vendorId        String  @id
  /// Address line 1
  line1           String?
  /// Address line 2
  line2           String?
  /// City
  city            String?
  /// Country (ISO 3166-1 alpha-2 code)
  country         String?
  /// Country name
  countryName     String?
  /// State or province (ISO 3166-2 code)
  stateOrProvince String?
  /// Zip or postal code
  zipOrPostalCode String?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  vendor Vendor @relation(fields: [vendorId], references: [id], onDelete: Cascade)

  @@map("vendors_address")
}

enum VendorAlternatePayByType {
  ACH
  AMEX
  CHECK
  CREDIT_CARD
  INTERNATIONAL_E_PAYMENT
  OFFLINE
  PAYPAL
  RPPS
  UNDEFINED
  VIRTUAL_CARD
  WALLET
}

model VendorAutoPay {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Vendor
  vendorId          String   @id
  /// Bill-gnerated ID of the organization bank account used for autopay
  bankAccountId     String?
  /// Bill-generated ID of the user that set up vendor autopay
  createdBy         String?
  /// Number of days before the bill payment due date that autopay is enabled
  daysBeforeDueDate Int?
  /// Is vendor auto pay enabled?
  enabled           Boolean?
  /// Maximum amount for which vendor autopay is enabled
  maxAmount         Float?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  vendor Vendor @relation(fields: [vendorId], references: [id], onDelete: Cascade)

  @@map("vendors_autopay")
}

enum VendorBankAccountStatus {
  NET_LINKED_ACCOUNT
  NO_ACCOUNT
  NO_NET_LINKED_ACCOUNT
  UNDEFINED
}

// Vendor Credits (https://developer.bill.com/reference/listvendorcredits)
model VendorCredit {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Vendor Credit (begins with "vcr")
  id                 String              @id
  /// Amount of the vendor credit
  amount             Float?
  /// Amount of the vendor credit that has been applied to invoices
  appliedAmount      Float?
  /// Has this Vendor Credit been archived?
  archived           Boolean?
  /// Date this vendo credit was created (yyyy-MM-dd)
  createdDate        String?
  /// Description of this Vendor Credit
  description        String?
  /// User-generated reference number for this Vendor Credit
  referenceNumber    String?
  /// Status of this Vendor Credit
  vendorCreditStatus VendorCreditStatus?

  // Potential Relationships -------------------------------------------------

  /// ID of the Bank Account for this Vendor Creit (begins with "bac")
  applyToBankAccountId String?

  // Actual Relationships ----------------------------------------------------

  /// ID of the Chart of Accounts for this Vendor Credit (begins with "0ca")
  applyToChartOfAccountId String?
  account                 Account?               @relation(fields: [applyToChartOfAccountId], references: [id], onDelete: Cascade)
  /// VendorCreditUsage related to this Vendor Credit
  usages                  VendorCreditUsage[]
  /// Bill-generated ID of the vendor (begins with "009")
  vendorId                String
  vendor                  Vendor                 @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  /// Line items for this Vendor Credit
  vendorCreditLineItems   VendorCreditLineItem[]
  /// Approvers for this Vendor Credit
  vendorCreditApprovers   VendorCreditApprover[]

  @@map("vendors_credits")
}

model VendorCreditApprover {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Vendor Credit Approver (begins with "vca")
  id                String   @id
  /// Object type (should be "VendorCreditApprover")
  entity            String?
  /// Is this approver active?
  isActive          Boolean?
  /// Timestamp of the last approval reminder sent to this approver
  lastReminderDate  String?
  /// Zero-relative index of this approver in the list of approvers for this Vendor Credit
  sortOrder         Int?
  /// Status of this vendor credit approver (will be replaced by description)
  status            String?
  /// Timestamp of the last status change
  statusChangedDate String?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  /// ID of the User that is this approver (begins with "006")
  userId         String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  /// ID of the Vendor Credit this approver belongs to (begins with "vcr")
  vendorCreditId String
  vendorCredit   VendorCredit @relation(fields: [vendorCreditId], references: [id], onDelete: Cascade)

  @@map("vendors_credits_approvers")
}

model VendorCreditLineItem {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Vendor Credit Line Item (begins with "vci")
  id          String  @id
  /// Amount for this Vendor Credit Line Item
  amount      Float?
  /// Description of this Vendor Credit Line Item
  description String?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  /// Classifications for this Vendor Credit Line Item
  classifications VendorCreditLineItemClassifications?
  /// Primary key for the Vendor Credit this line item belongs to (begins with "vcr")
  vendorCreditId  String
  vendorCredit    VendorCredit                         @relation(fields: [vendorCreditId], references: [id], onDelete: Cascade)

  @@map("vendors_credits_line_items")
}

model VendorCreditLineItemClassifications {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Vendor Credit Line Item Classifications
  id String @id

  // Potential Relationships -------------------------------------------------

  /// The Bill-generated ID of the accounting class (begins with "cls")
  accountingClassId String?
  /// The Bill-generated ID of the customer (begins with "0cu")
  customerId        String?
  /// The Bill-generated ID of the department (begins with "dep")
  departmentId      String?
  /// The Bill-generated ID of the employee (begins with "emp")
  employeeId        String?
  /// The Bill-generated ID of the item (begins with "0ii")
  itemId            String?
  /// The Bill-generated ID of the job (begins with "job")
  jobId             String?
  /// The Bill-generated ID of the location (begins with "loc")
  locationId        String?

  // Actual Relationships ----------------------------------------------------

  /// ID of the Chart of Accounts for this Vendor Credit Line Item (begins with "0ca")
  chartOfAccountId     String?
  account              Account?             @relation(fields: [chartOfAccountId], references: [id], onDelete: Cascade)
  /// The Vendor Credit Line Item this classification belongs to
  vendorCreditLineItem VendorCreditLineItem @relation(fields: [id], references: [id], onDelete: Cascade)

  @@map("vendors_credits_line_items_classifications")
}

enum VendorCreditStatus {
  FULLY_APPLIED
  NOT_APPLIED
  PARTIALLY_APPLIED
  UNDEFINED
}

model VendorCreditUsage {
  // Scalar Fields -----------------------------------------------------------

  /// ID of the Vendor Credit Usage (begins with "vcr")
  vendorCreditId String
  /// Zero-relative index of the Vendor Credit Usage for this Vendor Credit
  index          Int
  /// Amount of the vendor credit that has been applied
  amount         Float?

  // Potential Relationships -------------------------------------------------

  /// Bill-generated ID of the payment
  paymentId String?

  // Actual Relationships ----------------------------------------------------

  /// ID of Bill to which this Vendor Credit was applied (begins with "00n")
  billId       String?
  bill         Bill?         @relation(fields: [billId], references: [id])
  /// Vendor Credit that was used to pay the bill
  vendorCredit VendorCredit? @relation(fields: [vendorCreditId], references: [id])

  @@id([vendorCreditId, index])
  @@map("vendors_credits_usage")
}

enum VendorNetworkStatus {
  CONNECTED
  CONNECTED_RPPS
  NOT_CONNECTED
  PENDING
}

enum VendorPayBySubType {
  ACH
  IACH
  LOCAL
  MULTIPLE
  NONE
  UNDEFINED
  WIRE
}

enum VendorPayByType {
  ACH
  CHECK
  INTERNATIONAL_E_PAYMENT
  OFFLINE
  RPPS
  UNDEFINED
  VIRTUAL_CARD
  WALLET
}

model VendorPaymentInformation {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Vendor
  vendorId        String             @id
  /// Vendor email address for receiving payment information
  email           String?
  /// Last payment date
  lastPaymentDate String?
  /// Payment delivery method for making international payments
  payBySubType    VendorPayBySubType
  /// Payment method for Bill payments
  payByType       VendorPayByType
  /// Vendor name for check and electronic payments (overridden for Bill Network vendors)
  payeeName       String?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  vendor Vendor @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  // virtualCard is lifted to Vendor model directly

  @@map("vendors_payment_information")
}

enum VendorTaxIdType {
  EIN
  SSN
  UNDEFINED
}

enum VendorType {
  BUSINESS
  NONE
  PERSON
  UNDEFINED
}

model VendorVirtualCard {
  // Scalar Fields -----------------------------------------------------------

  /// Primary key for this Vendor
  vendorId           String                    @id
  /// Alternate payment method for virtual card settlement
  alternatePayByType VendorAlternatePayByType?
  /// Date/time the virtual card was declined
  declineDate        String?
  /// Date/time the virtual card was enrolled
  enrollDate         String?
  /// Remittance email address for this vendor
  remitEmail         String?
  /// Enrollment status for this vendor
  status             VendorVirtualCardStatus?

  // Potential Relationships -------------------------------------------------

  // Actual Relationships ----------------------------------------------------

  vendor Vendor @relation(fields: [vendorId], references: [id], onDelete: Cascade)

  @@map("vendors_virtual_card")
}

enum VendorVirtualCardStatus {
  CONFIRMED
  DECLINED
  ENROLLED
  ON_HOLD
  OPEN
  PAY_FOR_YOUR_OPPORTUNITY
  PAYER_ASSIST
  PENDING
  PHONE_NUMBER_NEEDED
  RECRUITING
  REQUIRE_MORE_INFO
  UNDEFINED
  UNKNOWN
  VERBAL_COMMITMENT
}
